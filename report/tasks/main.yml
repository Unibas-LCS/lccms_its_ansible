---
# Send a report to the server.
- block:
  - setup:
    register: setup_res
  
  - name: "Check system state. (Ignore error)"
    command: 'systemctl is-system-running'
    changed_when: false
    failed_when: false
    register: 'systemd_state'
  
  - name: "Report bad system state. (Ignore error)"
    fail:
      msg: "systemctl reports state {{ systemd_state.stdout }}. Please check"
    when: 'systemd_state.rc != 0'
    ignore_errors: yes
  
  - name: "Gather package information."
    ansible.builtin.package_facts:
      manager: auto
  
  - name: "Check if admin rights are granted to any user in /home."
    command: "/bin/bash /usr/.ansible/roles/its/report/files/adrig.sh"
    register: admin_rights_granted
    changed_when: false
  
  - name: "Get the currently logged in users."
    command: "/bin/bash {{ lccms.ansibleDir }}/roles/its/report/files/lastLoggedIn.sh"
    register: logged_in_users
    changed_when: false
      
  - name: "Check if /home is encrypted."
    command: "/bin/bash {{ lccms.ansibleDir }}/roles/its/report/files/checkEncryption.sh"
    register: encrypted
    changed_when: false
  
  - name: "Get all home directories to return as local user list"
    find:
      paths: /home/
      file_type: "directory"
    register: local_users
  
  - name: "Send collected data to university server: {{ its_report.server }}. (ignore error)"
    uri:
      url: "{{ its_report.server }}"
      method: POST
      body_format: form-urlencoded
      body:
        facts: "{{ setup_res|to_json }}"
        shells: "{{ lookup('file', '/etc/shells/') }}"
        unit: "{{ its_report.unit }}"
        Unibas_AdminRightsGranted: "{{ admin_rights_granted.stdout }}"
        lccms_host: "{{ lccms.host }}"
        packages: "{{ ansible_facts.packages|to_json }}"
        LocalUserAccounts: "{{ local_users.files | map(attribute='pw_name') | list | join(', ') }}"
        EncryptionStatus: "{{ encrypted.stdout }}"
        LastLoggedInUser: "{{ logged_in_users.stdout_lines | join(', ') }}"
      status_code: 200
    changed_when: false
    failed_when: false

# If we have a favorites list and are fully managed,
# add the lccms icon to the end and then install the favorites list.
  - block:
    - name: "Ensure lccm-managed.desktop is in favorites if list exists."
      set_fact:
        its_ansible: "{{ its_ansible | combine({'favorites': its_ansible.favorites + ['lccm-managed.desktop']}) }}"
      when:
        - its_ansible.favorites is defined
        - "'lccm-managed.desktop' not in its_ansible.favorites"
    
    # Set up the favorite icon list on the left of gnome.
    - name: "Create /etc/dconf/db/local.d directory."
      file:
        path: /etc/dconf/db/local.d
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: "Add the dconf user file"
      copy:
        src: user
        dest: /etc/dconf/profile/user
  
    - name: "Update dconf favorites."
      template:
        src: 00-lccms.j2
        dest: /etc/dconf/db/local.d/00-lccms
      register: dconf_change

    - name: "Run dconf update."
      command: dconf update
      when: dconf_change.changed

    when:
      - its_ansible is defined
      - its_ansible.favorites is defined
      - its_ansible.managed
      - ansible_distribution == 'Ubuntu'

  tags: self-managed
  
...
